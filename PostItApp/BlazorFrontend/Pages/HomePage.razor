@page "/home"

@using BlazorFrontend.Services
@using BlazorFrontend.Models

@inject PostService PostService
@inject AuthService AuthService
@inject NavigationManager NavigationManager



<div class="main-container">
    <!--Left panel-->
    <div class="left-panel">
        <div class="profile-section">
            <img src="images/default-avatar.jpg" alt="Avatar" class="profile-img" />
            <h4>@userProfile.Name</h4>
            <p class="profile-bio">@userProfile.Bio</p>
            <div class="profile-stats">
                <div>
                    <strong>Posts:</strong> @userProfile.PostCount
                </div>
                <div>
                    <strong>Reactions:</strong> @userProfile.ReactionCount
                </div>
                <div>
                    <strong>Friends:</strong> @userProfile.FriendCount
                </div>
            </div>
        </div>
    </div>

    <!-- Main panel -->
    <div class="center-panel">
        @if (posts is null) 
        {
            <p>Loading...</p>
        }
        else 
        {
            @foreach (var post in posts)
            {
                <div class="post">
                    <!-- Post header -->
                    <div class="post-header">
                        <div class="user-img">jpg</div>
                        <div>
                            <strong>@post.UserName</strong><br />
                            <small>@post.CreatedAt</small>
                        </div>
                    </div>
                    <!-- Content -->
                    <div class="post-content">
                        @post.Content
                    </div>
                    <!-- Likes and comments -->
                    <div class="post-actions">
                        <div>
                            <span>🖤 @post.Likes</span>
                        </div>
                        <div>
                            <span>💬 @post.CommentsCount</span>
                        </div>
                    </div>
                    <!-- Comment section -->
                    <div class="comments-section">
                    <strong>komentarze:</strong>
                   @*  <ul>
                        @foreach (var comment in post.comments)
                        {
                            <li class="comment-item">
                                <strong>@comment.username</strong>: @comment.content <br />
                                <small>@comment.date</small>
                            </li>
                        }
                    </ul> *@
                    <input type="text" placeholder="dodaj komentarz..." class="comment-input" />
                </div>
                </div>
            }
        }

        
    </div>

    <!-- Right panel -->
    <div class="right-panel">
        <h4>Friends</h4>
        <ul class="friends-list">
            @foreach (var friend in friends)
            {
                <li>
                    <img src="images/default-avatar.jpg" alt="Avatar" class="friend-img" />
                    <span class="friend-name">@friend.Name</span>
                </li>
            }
        </ul>
    </div>
</div>

@code {
    private List<BlazorFrontend.Models.PostModel> posts;

    protected override async Task OnInitializedAsync()
    {
        posts = await PostService.GetPostsAsync();

        // todo remove later  
        foreach (var post in posts)
        {
            post.Likes = new Random().Next(10, 100); 
            post.CommentsCount = new Random().Next(0, 20);
        }
    }

    // private List<BlazorFrontend.Models.PostModel> posts;

    // protected override async Task OnInitializedAsync()
    // {
    //     posts = await PostService.GetPostsAsync() ?? new List<PostModel>();
    // }

   
    private List<Friend> friends = new List<Friend>
    {
        new Friend { Name = "Jan Kowalski" },
        new Friend { Name = "Anna Nowak" },
        new Friend { Name = "Tomasz Wiśniewski" }
    };

    private UserProfile userProfile = new UserProfile
        {
            Name = "Jan Kowalski",
            PostCount = 12,
            ReactionCount = 89,
            FriendCount = 34,
            Bio = "Witaj! Jestem miłośnikiem technologii i nowoczesnych rozwiązań."
        };

    private class Post
    {
        public string UserName { get; set; }
        public string Date { get; set; }
        public string Content { get; set; }
        public int Likes { get; set; }
        public List<Comment> Comments { get; set; }
    }

    private class Comment
    {
        public string UserName { get; set; }
        public string Content { get; set; }
        public string Date { get; set; }
    }

    private class Friend
    {
        public string Name { get; set; }
    }

    private class UserProfile
    {
        public string Name { get; set; }
        public int PostCount { get; set; }
        public int ReactionCount { get; set; }
        public int FriendCount { get; set; }
        public string Bio { get; set; }
    }
}
