@page "/login"
@using BlazorFrontend.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@using Serilog;
<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" type="password" />
    </div>
    <button type="submit">Login</button>
</EditForm>

<div>
    <button @onclick="NavigateToRegister">Register</button>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div style="color: red">@errorMessage</div>
}

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;

        bool success = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);
        Log.Information($"Login model: {loginModel}, success: {success}");

        if (success)
        {
            NavigationManager.NavigateTo("/"); // Przekierowanie na stronę główną po udanym logowaniu
        }
        else
        {
            errorMessage = "Invalid username or password. Please try again.";
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}